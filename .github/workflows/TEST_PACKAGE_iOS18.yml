name: 패키지 테스트 (iOS 18)

on:
  issue_comment:
    types: [created, edited]

jobs:
  build:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/🎼') && contains(github.event.comment.body, '패키지 테스트 -ios18')
    permissions: write-all
    runs-on: macos-15  #Xcode 버전 (Swift 6.0 이상 필요) - https://github.com/actions/runner-images/blob/main/images/macos/macos-15-arm64-Readme.md#xcode
    steps:
      # 테스트 요청 시작
      - name: iOS 18 테스트를 요청합니다.
        run: |
          echo "iOS 18 에서 패키지의 모든 테스트 타겟을 테스트 합니다."
         
      # iOS 18 테스트 응답 커멘트
      - name: 테스트를 알립니다
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🔨 iOS 18 iPhone 16 Pro 에서 패키지를 테스트 합니다.'
            })

      # 코드를 PR 브랜치 HEAD로 체크아웃 합니다.
      - name: 체크아웃
        uses: actions/checkout@v4
        with:
          ref: refs/pull/${{ github.event.issue.number }}/head

      # Xcode 버전을 설정합니다.
      - name: Xcode 버전 설정
        run: sudo xcode-select -s /Applications/Xcode_16.app/Contents/Developer # https://github.com/actions/runner-images/issues/10629#issuecomment-2379924104
        # maxim-lobanov/setup-xcode@v1 사용?

      # xcbeautify 를 설치합니다.
      - name: xcbeautify 설치
        run: |
          brew install xcbeautify
          
      # GuitarChordsTests 스킴을 테스트합니다.
      - name: GuitarChordsTests 테스트
        run: |
          set -o pipefail && xcodebuild test -scheme GuitarChordsTests -destination 'platform=iOS Simulator,OS=18.0,name=iPhone 16 Pro' | xcbeautify --renderer github-actions
          
      # 테스트 성공시 커멘트
      - name: 테스트 성공을 알립니다
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ iOS 18 에서 패키지를 성공적으로 테스트 했습니다.'
            })

      # 테스트 실패시 커멘트
      - name: 테스트 실패를 알립니다
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '📬 iOS 18 에서 패키지 테스트에 실패했습니다. Actions에서 실패 결과를 확인해주세요.'
            })
        if: failure()
